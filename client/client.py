# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_client', [dirname(__file__)])
        except ImportError:
            import _client
            return _client
        if fp is not None:
            try:
                _mod = imp.load_module('_client', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _client = swig_import_helper()
    del swig_import_helper
else:
    import _client
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def new_PlayerP():
    return _client.new_PlayerP()
new_PlayerP = _client.new_PlayerP

def copy_PlayerP(value):
    return _client.copy_PlayerP(value)
copy_PlayerP = _client.copy_PlayerP

def delete_PlayerP(obj):
    return _client.delete_PlayerP(obj)
delete_PlayerP = _client.delete_PlayerP

def PlayerP_assign(obj, value):
    return _client.PlayerP_assign(obj, value)
PlayerP_assign = _client.PlayerP_assign

def PlayerP_value(obj):
    return _client.PlayerP_value(obj)
PlayerP_value = _client.PlayerP_value

def playerp_to_playerp_nat(x):
    return _client.playerp_to_playerp_nat(x)
playerp_to_playerp_nat = _client.playerp_to_playerp_nat

def new_PlayerPs(nelements):
    return _client.new_PlayerPs(nelements)
new_PlayerPs = _client.new_PlayerPs

def delete_PlayerPs(ary):
    return _client.delete_PlayerPs(ary)
delete_PlayerPs = _client.delete_PlayerPs

def PlayerPs_getitem(ary, index):
    return _client.PlayerPs_getitem(ary, index)
PlayerPs_getitem = _client.PlayerPs_getitem

def PlayerPs_setitem(ary, index, value):
    return _client.PlayerPs_setitem(ary, index, value)
PlayerPs_setitem = _client.PlayerPs_setitem

def new_Tiles(nelements):
    return _client.new_Tiles(nelements)
new_Tiles = _client.new_Tiles

def delete_Tiles(ary):
    return _client.delete_Tiles(ary)
delete_Tiles = _client.delete_Tiles

def Tiles_getitem(ary, index):
    return _client.Tiles_getitem(ary, index)
Tiles_getitem = _client.Tiles_getitem

def Tiles_setitem(ary, index, value):
    return _client.Tiles_setitem(ary, index, value)
Tiles_setitem = _client.Tiles_setitem

def new_ints(nelements):
    return _client.new_ints(nelements)
new_ints = _client.new_ints

def delete_ints(ary):
    return _client.delete_ints(ary)
delete_ints = _client.delete_ints

def ints_getitem(ary, index):
    return _client.ints_getitem(ary, index)
ints_getitem = _client.ints_getitem

def ints_setitem(ary, index, value):
    return _client.ints_setitem(ary, index, value)
ints_setitem = _client.ints_setitem

def client_init(address):
    return _client.client_init(address)
client_init = _client.client_init

def client_reinit(fd):
    return _client.client_reinit(fd)
client_reinit = _client.client_reinit

def client_connect(g, id, name):
    return _client.client_connect(g, id, name)
client_connect = _client.client_connect

def client_close(g):
    return _client.client_close(g)
client_close = _client.client_close

def fd_get_line(fd):
    return _client.fd_get_line(fd)
fd_get_line = _client.fd_get_line

def client_send_packet(g, m):
    return _client.client_send_packet(g, m)
client_send_packet = _client.client_send_packet

def game_handle_cmsg(g, m):
    return _client.game_handle_cmsg(g, m)
game_handle_cmsg = _client.game_handle_cmsg

def tile_code(t):
    return _client.tile_code(t)
tile_code = _client.tile_code

def tile_decode(c):
    return _client.tile_decode(c)
tile_decode = _client.tile_decode

_client.east_swigconstant(_client)
east = _client.east

_client.south_swigconstant(_client)
south = _client.south

_client.west_swigconstant(_client)
west = _client.west

_client.north_swigconstant(_client)
north = _client.north

_client.noseat_swigconstant(_client)
noseat = _client.noseat

def game_id_to_seat(g, id):
    return _client.game_id_to_seat(g, id)
game_id_to_seat = _client.game_id_to_seat

def decode_cmsg(arg):
    return _client.decode_cmsg(arg)
decode_cmsg = _client.decode_cmsg

def encode_pmsg(msg):
    return _client.encode_pmsg(msg)
encode_pmsg = _client.encode_pmsg

def CMsg_to_CMsgErrorMsg(msg):
    return _client.CMsg_to_CMsgErrorMsg(msg)
CMsg_to_CMsgErrorMsg = _client.CMsg_to_CMsgErrorMsg

def PMsgSaveStateMsg_to_PMsg(msg):
    return _client.PMsgSaveStateMsg_to_PMsg(msg)
PMsgSaveStateMsg_to_PMsg = _client.PMsgSaveStateMsg_to_PMsg

def CMsg_to_CMsgStateSavedMsg(msg):
    return _client.CMsg_to_CMsgStateSavedMsg(msg)
CMsg_to_CMsgStateSavedMsg = _client.CMsg_to_CMsgStateSavedMsg

def PMsgLoadStateMsg_to_PMsg(msg):
    return _client.PMsgLoadStateMsg_to_PMsg(msg)
PMsgLoadStateMsg_to_PMsg = _client.PMsgLoadStateMsg_to_PMsg

def CMsg_to_CMsgInfoTilesMsg(msg):
    return _client.CMsg_to_CMsgInfoTilesMsg(msg)
CMsg_to_CMsgInfoTilesMsg = _client.CMsg_to_CMsgInfoTilesMsg

def PMsgConnectMsg_to_PMsg(msg):
    return _client.PMsgConnectMsg_to_PMsg(msg)
PMsgConnectMsg_to_PMsg = _client.PMsgConnectMsg_to_PMsg

def CMsg_to_CMsgConnectReplyMsg(msg):
    return _client.CMsg_to_CMsgConnectReplyMsg(msg)
CMsg_to_CMsgConnectReplyMsg = _client.CMsg_to_CMsgConnectReplyMsg

def CMsg_to_CMsgAuthReqdMsg(msg):
    return _client.CMsg_to_CMsgAuthReqdMsg(msg)
CMsg_to_CMsgAuthReqdMsg = _client.CMsg_to_CMsgAuthReqdMsg

def PMsgAuthInfoMsg_to_PMsg(msg):
    return _client.PMsgAuthInfoMsg_to_PMsg(msg)
PMsgAuthInfoMsg_to_PMsg = _client.PMsgAuthInfoMsg_to_PMsg

def PMsgNewAuthInfoMsg_to_PMsg(msg):
    return _client.PMsgNewAuthInfoMsg_to_PMsg(msg)
PMsgNewAuthInfoMsg_to_PMsg = _client.PMsgNewAuthInfoMsg_to_PMsg

def CMsg_to_CMsgRedirectMsg(msg):
    return _client.CMsg_to_CMsgRedirectMsg(msg)
CMsg_to_CMsgRedirectMsg = _client.CMsg_to_CMsgRedirectMsg

def PMsgRequestReconnectMsg_to_PMsg(msg):
    return _client.PMsgRequestReconnectMsg_to_PMsg(msg)
PMsgRequestReconnectMsg_to_PMsg = _client.PMsgRequestReconnectMsg_to_PMsg

def CMsg_to_CMsgReconnectMsg(msg):
    return _client.CMsg_to_CMsgReconnectMsg(msg)
CMsg_to_CMsgReconnectMsg = _client.CMsg_to_CMsgReconnectMsg

def PMsgDisconnectMsg_to_PMsg(msg):
    return _client.PMsgDisconnectMsg_to_PMsg(msg)
PMsgDisconnectMsg_to_PMsg = _client.PMsgDisconnectMsg_to_PMsg

def CMsg_to_CMsgPlayerMsg(msg):
    return _client.CMsg_to_CMsgPlayerMsg(msg)
CMsg_to_CMsgPlayerMsg = _client.CMsg_to_CMsgPlayerMsg

def CMsg_to_CMsgGameMsg(msg):
    return _client.CMsg_to_CMsgGameMsg(msg)
CMsg_to_CMsgGameMsg = _client.CMsg_to_CMsgGameMsg

def CMsg_to_CMsgNewRoundMsg(msg):
    return _client.CMsg_to_CMsgNewRoundMsg(msg)
CMsg_to_CMsgNewRoundMsg = _client.CMsg_to_CMsgNewRoundMsg

def CMsg_to_CMsgNewHandMsg(msg):
    return _client.CMsg_to_CMsgNewHandMsg(msg)
CMsg_to_CMsgNewHandMsg = _client.CMsg_to_CMsgNewHandMsg

def CMsg_to_CMsgPlayerDrawsMsg(msg):
    return _client.CMsg_to_CMsgPlayerDrawsMsg(msg)
CMsg_to_CMsgPlayerDrawsMsg = _client.CMsg_to_CMsgPlayerDrawsMsg

def CMsg_to_CMsgPlayerDrawsLooseMsg(msg):
    return _client.CMsg_to_CMsgPlayerDrawsLooseMsg(msg)
CMsg_to_CMsgPlayerDrawsLooseMsg = _client.CMsg_to_CMsgPlayerDrawsLooseMsg

def PMsgDeclareSpecialMsg_to_PMsg(msg):
    return _client.PMsgDeclareSpecialMsg_to_PMsg(msg)
PMsgDeclareSpecialMsg_to_PMsg = _client.PMsgDeclareSpecialMsg_to_PMsg

def CMsg_to_CMsgPlayerDeclaresSpecialMsg(msg):
    return _client.CMsg_to_CMsgPlayerDeclaresSpecialMsg(msg)
CMsg_to_CMsgPlayerDeclaresSpecialMsg = _client.CMsg_to_CMsgPlayerDeclaresSpecialMsg

def CMsg_to_CMsgStartPlayMsg(msg):
    return _client.CMsg_to_CMsgStartPlayMsg(msg)
CMsg_to_CMsgStartPlayMsg = _client.CMsg_to_CMsgStartPlayMsg

def CMsg_to_CMsgStopPlayMsg(msg):
    return _client.CMsg_to_CMsgStopPlayMsg(msg)
CMsg_to_CMsgStopPlayMsg = _client.CMsg_to_CMsgStopPlayMsg

def PMsgRequestPauseMsg_to_PMsg(msg):
    return _client.PMsgRequestPauseMsg_to_PMsg(msg)
PMsgRequestPauseMsg_to_PMsg = _client.PMsgRequestPauseMsg_to_PMsg

def CMsg_to_CMsgPauseMsg(msg):
    return _client.CMsg_to_CMsgPauseMsg(msg)
CMsg_to_CMsgPauseMsg = _client.CMsg_to_CMsgPauseMsg

def PMsgReadyMsg_to_PMsg(msg):
    return _client.PMsgReadyMsg_to_PMsg(msg)
PMsgReadyMsg_to_PMsg = _client.PMsgReadyMsg_to_PMsg

def CMsg_to_CMsgPlayerReadyMsg(msg):
    return _client.CMsg_to_CMsgPlayerReadyMsg(msg)
CMsg_to_CMsgPlayerReadyMsg = _client.CMsg_to_CMsgPlayerReadyMsg

def PMsgDiscardMsg_to_PMsg(msg):
    return _client.PMsgDiscardMsg_to_PMsg(msg)
PMsgDiscardMsg_to_PMsg = _client.PMsgDiscardMsg_to_PMsg

def CMsg_to_CMsgPlayerDiscardsMsg(msg):
    return _client.CMsg_to_CMsgPlayerDiscardsMsg(msg)
CMsg_to_CMsgPlayerDiscardsMsg = _client.CMsg_to_CMsgPlayerDiscardsMsg

def PMsgNoClaimMsg_to_PMsg(msg):
    return _client.PMsgNoClaimMsg_to_PMsg(msg)
PMsgNoClaimMsg_to_PMsg = _client.PMsgNoClaimMsg_to_PMsg

def CMsg_to_CMsgPlayerDoesntClaimMsg(msg):
    return _client.CMsg_to_CMsgPlayerDoesntClaimMsg(msg)
CMsg_to_CMsgPlayerDoesntClaimMsg = _client.CMsg_to_CMsgPlayerDoesntClaimMsg

def CMsg_to_CMsgDangerousDiscardMsg(msg):
    return _client.CMsg_to_CMsgDangerousDiscardMsg(msg)
CMsg_to_CMsgDangerousDiscardMsg = _client.CMsg_to_CMsgDangerousDiscardMsg

def PMsgPungMsg_to_PMsg(msg):
    return _client.PMsgPungMsg_to_PMsg(msg)
PMsgPungMsg_to_PMsg = _client.PMsgPungMsg_to_PMsg

def CMsg_to_CMsgPlayerClaimsPungMsg(msg):
    return _client.CMsg_to_CMsgPlayerClaimsPungMsg(msg)
CMsg_to_CMsgPlayerClaimsPungMsg = _client.CMsg_to_CMsgPlayerClaimsPungMsg

def CMsg_to_CMsgClaimDeniedMsg(msg):
    return _client.CMsg_to_CMsgClaimDeniedMsg(msg)
CMsg_to_CMsgClaimDeniedMsg = _client.CMsg_to_CMsgClaimDeniedMsg

def CMsg_to_CMsgPlayerPungsMsg(msg):
    return _client.CMsg_to_CMsgPlayerPungsMsg(msg)
CMsg_to_CMsgPlayerPungsMsg = _client.CMsg_to_CMsgPlayerPungsMsg

def PMsgFormClosedPungMsg_to_PMsg(msg):
    return _client.PMsgFormClosedPungMsg_to_PMsg(msg)
PMsgFormClosedPungMsg_to_PMsg = _client.PMsgFormClosedPungMsg_to_PMsg

def CMsg_to_CMsgPlayerFormsClosedPungMsg(msg):
    return _client.CMsg_to_CMsgPlayerFormsClosedPungMsg(msg)
CMsg_to_CMsgPlayerFormsClosedPungMsg = _client.CMsg_to_CMsgPlayerFormsClosedPungMsg

def PMsgKongMsg_to_PMsg(msg):
    return _client.PMsgKongMsg_to_PMsg(msg)
PMsgKongMsg_to_PMsg = _client.PMsgKongMsg_to_PMsg

def CMsg_to_CMsgPlayerClaimsKongMsg(msg):
    return _client.CMsg_to_CMsgPlayerClaimsKongMsg(msg)
CMsg_to_CMsgPlayerClaimsKongMsg = _client.CMsg_to_CMsgPlayerClaimsKongMsg

def CMsg_to_CMsgPlayerKongsMsg(msg):
    return _client.CMsg_to_CMsgPlayerKongsMsg(msg)
CMsg_to_CMsgPlayerKongsMsg = _client.CMsg_to_CMsgPlayerKongsMsg

def PMsgDeclareClosedKongMsg_to_PMsg(msg):
    return _client.PMsgDeclareClosedKongMsg_to_PMsg(msg)
PMsgDeclareClosedKongMsg_to_PMsg = _client.PMsgDeclareClosedKongMsg_to_PMsg

def CMsg_to_CMsgPlayerDeclaresClosedKongMsg(msg):
    return _client.CMsg_to_CMsgPlayerDeclaresClosedKongMsg(msg)
CMsg_to_CMsgPlayerDeclaresClosedKongMsg = _client.CMsg_to_CMsgPlayerDeclaresClosedKongMsg

def PMsgAddToPungMsg_to_PMsg(msg):
    return _client.PMsgAddToPungMsg_to_PMsg(msg)
PMsgAddToPungMsg_to_PMsg = _client.PMsgAddToPungMsg_to_PMsg

def CMsg_to_CMsgPlayerAddsToPungMsg(msg):
    return _client.CMsg_to_CMsgPlayerAddsToPungMsg(msg)
CMsg_to_CMsgPlayerAddsToPungMsg = _client.CMsg_to_CMsgPlayerAddsToPungMsg

def CMsg_to_CMsgPlayerRobsKongMsg(msg):
    return _client.CMsg_to_CMsgPlayerRobsKongMsg(msg)
CMsg_to_CMsgPlayerRobsKongMsg = _client.CMsg_to_CMsgPlayerRobsKongMsg

def PMsgQueryMahJongMsg_to_PMsg(msg):
    return _client.PMsgQueryMahJongMsg_to_PMsg(msg)
PMsgQueryMahJongMsg_to_PMsg = _client.PMsgQueryMahJongMsg_to_PMsg

def CMsg_to_CMsgCanMahJongMsg(msg):
    return _client.CMsg_to_CMsgCanMahJongMsg(msg)
CMsg_to_CMsgCanMahJongMsg = _client.CMsg_to_CMsgCanMahJongMsg

def PMsgChowMsg_to_PMsg(msg):
    return _client.PMsgChowMsg_to_PMsg(msg)
PMsgChowMsg_to_PMsg = _client.PMsgChowMsg_to_PMsg

def CMsg_to_CMsgPlayerClaimsChowMsg(msg):
    return _client.CMsg_to_CMsgPlayerClaimsChowMsg(msg)
CMsg_to_CMsgPlayerClaimsChowMsg = _client.CMsg_to_CMsgPlayerClaimsChowMsg

def CMsg_to_CMsgPlayerChowsMsg(msg):
    return _client.CMsg_to_CMsgPlayerChowsMsg(msg)
CMsg_to_CMsgPlayerChowsMsg = _client.CMsg_to_CMsgPlayerChowsMsg

def PMsgFormClosedChowMsg_to_PMsg(msg):
    return _client.PMsgFormClosedChowMsg_to_PMsg(msg)
PMsgFormClosedChowMsg_to_PMsg = _client.PMsgFormClosedChowMsg_to_PMsg

def CMsg_to_CMsgPlayerFormsClosedChowMsg(msg):
    return _client.CMsg_to_CMsgPlayerFormsClosedChowMsg(msg)
CMsg_to_CMsgPlayerFormsClosedChowMsg = _client.CMsg_to_CMsgPlayerFormsClosedChowMsg

def PMsgDeclareWashOutMsg_to_PMsg(msg):
    return _client.PMsgDeclareWashOutMsg_to_PMsg(msg)
PMsgDeclareWashOutMsg_to_PMsg = _client.PMsgDeclareWashOutMsg_to_PMsg

def CMsg_to_CMsgWashOutMsg(msg):
    return _client.CMsg_to_CMsgWashOutMsg(msg)
CMsg_to_CMsgWashOutMsg = _client.CMsg_to_CMsgWashOutMsg

def PMsgMahJongMsg_to_PMsg(msg):
    return _client.PMsgMahJongMsg_to_PMsg(msg)
PMsgMahJongMsg_to_PMsg = _client.PMsgMahJongMsg_to_PMsg

def CMsg_to_CMsgPlayerClaimsMahJongMsg(msg):
    return _client.CMsg_to_CMsgPlayerClaimsMahJongMsg(msg)
CMsg_to_CMsgPlayerClaimsMahJongMsg = _client.CMsg_to_CMsgPlayerClaimsMahJongMsg

def CMsg_to_CMsgPlayerMahJongsMsg(msg):
    return _client.CMsg_to_CMsgPlayerMahJongsMsg(msg)
CMsg_to_CMsgPlayerMahJongsMsg = _client.CMsg_to_CMsgPlayerMahJongsMsg

def PMsgPairMsg_to_PMsg(msg):
    return _client.PMsgPairMsg_to_PMsg(msg)
PMsgPairMsg_to_PMsg = _client.PMsgPairMsg_to_PMsg

def CMsg_to_CMsgPlayerPairsMsg(msg):
    return _client.CMsg_to_CMsgPlayerPairsMsg(msg)
CMsg_to_CMsgPlayerPairsMsg = _client.CMsg_to_CMsgPlayerPairsMsg

def PMsgFormClosedPairMsg_to_PMsg(msg):
    return _client.PMsgFormClosedPairMsg_to_PMsg(msg)
PMsgFormClosedPairMsg_to_PMsg = _client.PMsgFormClosedPairMsg_to_PMsg

def CMsg_to_CMsgPlayerFormsClosedPairMsg(msg):
    return _client.CMsg_to_CMsgPlayerFormsClosedPairMsg(msg)
CMsg_to_CMsgPlayerFormsClosedPairMsg = _client.CMsg_to_CMsgPlayerFormsClosedPairMsg

def PMsgSpecialSetMsg_to_PMsg(msg):
    return _client.PMsgSpecialSetMsg_to_PMsg(msg)
PMsgSpecialSetMsg_to_PMsg = _client.PMsgSpecialSetMsg_to_PMsg

def CMsg_to_CMsgPlayerSpecialSetMsg(msg):
    return _client.CMsg_to_CMsgPlayerSpecialSetMsg(msg)
CMsg_to_CMsgPlayerSpecialSetMsg = _client.CMsg_to_CMsgPlayerSpecialSetMsg

def PMsgFormClosedSpecialSetMsg_to_PMsg(msg):
    return _client.PMsgFormClosedSpecialSetMsg_to_PMsg(msg)
PMsgFormClosedSpecialSetMsg_to_PMsg = _client.PMsgFormClosedSpecialSetMsg_to_PMsg

def CMsg_to_CMsgPlayerFormsClosedSpecialSetMsg(msg):
    return _client.CMsg_to_CMsgPlayerFormsClosedSpecialSetMsg(msg)
CMsg_to_CMsgPlayerFormsClosedSpecialSetMsg = _client.CMsg_to_CMsgPlayerFormsClosedSpecialSetMsg

def PMsgShowTilesMsg_to_PMsg(msg):
    return _client.PMsgShowTilesMsg_to_PMsg(msg)
PMsgShowTilesMsg_to_PMsg = _client.PMsgShowTilesMsg_to_PMsg

def CMsg_to_CMsgPlayerShowsTilesMsg(msg):
    return _client.CMsg_to_CMsgPlayerShowsTilesMsg(msg)
CMsg_to_CMsgPlayerShowsTilesMsg = _client.CMsg_to_CMsgPlayerShowsTilesMsg

def CMsg_to_CMsgHandScoreMsg(msg):
    return _client.CMsg_to_CMsgHandScoreMsg(msg)
CMsg_to_CMsgHandScoreMsg = _client.CMsg_to_CMsgHandScoreMsg

def CMsg_to_CMsgSettlementMsg(msg):
    return _client.CMsg_to_CMsgSettlementMsg(msg)
CMsg_to_CMsgSettlementMsg = _client.CMsg_to_CMsgSettlementMsg

def PMsgSetPlayerOptionMsg_to_PMsg(msg):
    return _client.PMsgSetPlayerOptionMsg_to_PMsg(msg)
PMsgSetPlayerOptionMsg_to_PMsg = _client.PMsgSetPlayerOptionMsg_to_PMsg

def CMsg_to_CMsgPlayerOptionSetMsg(msg):
    return _client.CMsg_to_CMsgPlayerOptionSetMsg(msg)
CMsg_to_CMsgPlayerOptionSetMsg = _client.CMsg_to_CMsgPlayerOptionSetMsg

def CMsg_to_CMsgGameOverMsg(msg):
    return _client.CMsg_to_CMsgGameOverMsg(msg)
CMsg_to_CMsgGameOverMsg = _client.CMsg_to_CMsgGameOverMsg

def PMsgSetGameOptionMsg_to_PMsg(msg):
    return _client.PMsgSetGameOptionMsg_to_PMsg(msg)
PMsgSetGameOptionMsg_to_PMsg = _client.PMsgSetGameOptionMsg_to_PMsg

def CMsg_to_CMsgGameOptionMsg(msg):
    return _client.CMsg_to_CMsgGameOptionMsg(msg)
CMsg_to_CMsgGameOptionMsg = _client.CMsg_to_CMsgGameOptionMsg

def PMsgQueryGameOptionMsg_to_PMsg(msg):
    return _client.PMsgQueryGameOptionMsg_to_PMsg(msg)
PMsgQueryGameOptionMsg_to_PMsg = _client.PMsgQueryGameOptionMsg_to_PMsg

def PMsgListGameOptionsMsg_to_PMsg(msg):
    return _client.PMsgListGameOptionsMsg_to_PMsg(msg)
PMsgListGameOptionsMsg_to_PMsg = _client.PMsgListGameOptionsMsg_to_PMsg

def PMsgChangeManagerMsg_to_PMsg(msg):
    return _client.PMsgChangeManagerMsg_to_PMsg(msg)
PMsgChangeManagerMsg_to_PMsg = _client.PMsgChangeManagerMsg_to_PMsg

def CMsg_to_CMsgChangeManagerMsg(msg):
    return _client.CMsg_to_CMsgChangeManagerMsg(msg)
CMsg_to_CMsgChangeManagerMsg = _client.CMsg_to_CMsgChangeManagerMsg

def PMsgSendMessageMsg_to_PMsg(msg):
    return _client.PMsgSendMessageMsg_to_PMsg(msg)
PMsgSendMessageMsg_to_PMsg = _client.PMsgSendMessageMsg_to_PMsg

def CMsg_to_CMsgMessageMsg(msg):
    return _client.CMsg_to_CMsgMessageMsg(msg)
CMsg_to_CMsgMessageMsg = _client.CMsg_to_CMsgMessageMsg

def CMsg_to_CMsgWallMsg(msg):
    return _client.CMsg_to_CMsgWallMsg(msg)
CMsg_to_CMsgWallMsg = _client.CMsg_to_CMsgWallMsg

def CMsg_to_CMsgCommentMsg(msg):
    return _client.CMsg_to_CMsgCommentMsg(msg)
CMsg_to_CMsgCommentMsg = _client.CMsg_to_CMsgCommentMsg

def PMsgSwapTileMsg_to_PMsg(msg):
    return _client.PMsgSwapTileMsg_to_PMsg(msg)
PMsgSwapTileMsg_to_PMsg = _client.PMsgSwapTileMsg_to_PMsg

def CMsg_to_CMsgSwapTileMsg(msg):
    return _client.CMsg_to_CMsgSwapTileMsg(msg)
CMsg_to_CMsgSwapTileMsg = _client.CMsg_to_CMsgSwapTileMsg

_client.CMsgError_swigconstant(_client)
CMsgError = _client.CMsgError

_client.CMsgInfoTiles_swigconstant(_client)
CMsgInfoTiles = _client.CMsgInfoTiles

_client.CMsgStateSaved_swigconstant(_client)
CMsgStateSaved = _client.CMsgStateSaved

_client.CMsgConnectReply_swigconstant(_client)
CMsgConnectReply = _client.CMsgConnectReply

_client.CMsgReconnect_swigconstant(_client)
CMsgReconnect = _client.CMsgReconnect

_client.CMsgAuthReqd_swigconstant(_client)
CMsgAuthReqd = _client.CMsgAuthReqd

_client.CMsgRedirect_swigconstant(_client)
CMsgRedirect = _client.CMsgRedirect

_client.CMsgPlayer_swigconstant(_client)
CMsgPlayer = _client.CMsgPlayer

_client.CMsgNewRound_swigconstant(_client)
CMsgNewRound = _client.CMsgNewRound

_client.CMsgGame_swigconstant(_client)
CMsgGame = _client.CMsgGame

_client.CMsgNewHand_swigconstant(_client)
CMsgNewHand = _client.CMsgNewHand

_client.CMsgPlayerDeclaresSpecial_swigconstant(_client)
CMsgPlayerDeclaresSpecial = _client.CMsgPlayerDeclaresSpecial

_client.CMsgStartPlay_swigconstant(_client)
CMsgStartPlay = _client.CMsgStartPlay

_client.CMsgStopPlay_swigconstant(_client)
CMsgStopPlay = _client.CMsgStopPlay

_client.CMsgPause_swigconstant(_client)
CMsgPause = _client.CMsgPause

_client.CMsgPlayerReady_swigconstant(_client)
CMsgPlayerReady = _client.CMsgPlayerReady

_client.CMsgPlayerDraws_swigconstant(_client)
CMsgPlayerDraws = _client.CMsgPlayerDraws

_client.CMsgPlayerDrawsLoose_swigconstant(_client)
CMsgPlayerDrawsLoose = _client.CMsgPlayerDrawsLoose

_client.CMsgPlayerDiscards_swigconstant(_client)
CMsgPlayerDiscards = _client.CMsgPlayerDiscards

_client.CMsgClaimDenied_swigconstant(_client)
CMsgClaimDenied = _client.CMsgClaimDenied

_client.CMsgPlayerDoesntClaim_swigconstant(_client)
CMsgPlayerDoesntClaim = _client.CMsgPlayerDoesntClaim

_client.CMsgDangerousDiscard_swigconstant(_client)
CMsgDangerousDiscard = _client.CMsgDangerousDiscard

_client.CMsgPlayerClaimsPung_swigconstant(_client)
CMsgPlayerClaimsPung = _client.CMsgPlayerClaimsPung

_client.CMsgPlayerPungs_swigconstant(_client)
CMsgPlayerPungs = _client.CMsgPlayerPungs

_client.CMsgPlayerFormsClosedPung_swigconstant(_client)
CMsgPlayerFormsClosedPung = _client.CMsgPlayerFormsClosedPung

_client.CMsgPlayerClaimsKong_swigconstant(_client)
CMsgPlayerClaimsKong = _client.CMsgPlayerClaimsKong

_client.CMsgPlayerKongs_swigconstant(_client)
CMsgPlayerKongs = _client.CMsgPlayerKongs

_client.CMsgPlayerDeclaresClosedKong_swigconstant(_client)
CMsgPlayerDeclaresClosedKong = _client.CMsgPlayerDeclaresClosedKong

_client.CMsgPlayerAddsToPung_swigconstant(_client)
CMsgPlayerAddsToPung = _client.CMsgPlayerAddsToPung

_client.CMsgPlayerRobsKong_swigconstant(_client)
CMsgPlayerRobsKong = _client.CMsgPlayerRobsKong

_client.CMsgCanMahJong_swigconstant(_client)
CMsgCanMahJong = _client.CMsgCanMahJong

_client.CMsgPlayerClaimsChow_swigconstant(_client)
CMsgPlayerClaimsChow = _client.CMsgPlayerClaimsChow

_client.CMsgPlayerChows_swigconstant(_client)
CMsgPlayerChows = _client.CMsgPlayerChows

_client.CMsgPlayerFormsClosedChow_swigconstant(_client)
CMsgPlayerFormsClosedChow = _client.CMsgPlayerFormsClosedChow

_client.CMsgWashOut_swigconstant(_client)
CMsgWashOut = _client.CMsgWashOut

_client.CMsgPlayerClaimsMahJong_swigconstant(_client)
CMsgPlayerClaimsMahJong = _client.CMsgPlayerClaimsMahJong

_client.CMsgPlayerMahJongs_swigconstant(_client)
CMsgPlayerMahJongs = _client.CMsgPlayerMahJongs

_client.CMsgPlayerPairs_swigconstant(_client)
CMsgPlayerPairs = _client.CMsgPlayerPairs

_client.CMsgPlayerFormsClosedPair_swigconstant(_client)
CMsgPlayerFormsClosedPair = _client.CMsgPlayerFormsClosedPair

_client.CMsgPlayerShowsTiles_swigconstant(_client)
CMsgPlayerShowsTiles = _client.CMsgPlayerShowsTiles

_client.CMsgPlayerSpecialSet_swigconstant(_client)
CMsgPlayerSpecialSet = _client.CMsgPlayerSpecialSet

_client.CMsgPlayerFormsClosedSpecialSet_swigconstant(_client)
CMsgPlayerFormsClosedSpecialSet = _client.CMsgPlayerFormsClosedSpecialSet

_client.CMsgPlayerOptionSet_swigconstant(_client)
CMsgPlayerOptionSet = _client.CMsgPlayerOptionSet

_client.CMsgHandScore_swigconstant(_client)
CMsgHandScore = _client.CMsgHandScore

_client.CMsgSettlement_swigconstant(_client)
CMsgSettlement = _client.CMsgSettlement

_client.CMsgGameOver_swigconstant(_client)
CMsgGameOver = _client.CMsgGameOver

_client.CMsgGameOption_swigconstant(_client)
CMsgGameOption = _client.CMsgGameOption

_client.CMsgChangeManager_swigconstant(_client)
CMsgChangeManager = _client.CMsgChangeManager

_client.CMsgMessage_swigconstant(_client)
CMsgMessage = _client.CMsgMessage

_client.CMsgWall_swigconstant(_client)
CMsgWall = _client.CMsgWall

_client.CMsgComment_swigconstant(_client)
CMsgComment = _client.CMsgComment

_client.CMsgSwapTile_swigconstant(_client)
CMsgSwapTile = _client.CMsgSwapTile

_client.PMsgSaveState_swigconstant(_client)
PMsgSaveState = _client.PMsgSaveState

_client.PMsgLoadState_swigconstant(_client)
PMsgLoadState = _client.PMsgLoadState

_client.PMsgConnect_swigconstant(_client)
PMsgConnect = _client.PMsgConnect

_client.PMsgRequestReconnect_swigconstant(_client)
PMsgRequestReconnect = _client.PMsgRequestReconnect

_client.PMsgAuthInfo_swigconstant(_client)
PMsgAuthInfo = _client.PMsgAuthInfo

_client.PMsgNewAuthInfo_swigconstant(_client)
PMsgNewAuthInfo = _client.PMsgNewAuthInfo

_client.PMsgDisconnect_swigconstant(_client)
PMsgDisconnect = _client.PMsgDisconnect

_client.PMsgDeclareSpecial_swigconstant(_client)
PMsgDeclareSpecial = _client.PMsgDeclareSpecial

_client.PMsgRequestPause_swigconstant(_client)
PMsgRequestPause = _client.PMsgRequestPause

_client.PMsgReady_swigconstant(_client)
PMsgReady = _client.PMsgReady

_client.PMsgDiscard_swigconstant(_client)
PMsgDiscard = _client.PMsgDiscard

_client.PMsgNoClaim_swigconstant(_client)
PMsgNoClaim = _client.PMsgNoClaim

_client.PMsgPung_swigconstant(_client)
PMsgPung = _client.PMsgPung

_client.PMsgFormClosedPung_swigconstant(_client)
PMsgFormClosedPung = _client.PMsgFormClosedPung

_client.PMsgKong_swigconstant(_client)
PMsgKong = _client.PMsgKong

_client.PMsgDeclareClosedKong_swigconstant(_client)
PMsgDeclareClosedKong = _client.PMsgDeclareClosedKong

_client.PMsgAddToPung_swigconstant(_client)
PMsgAddToPung = _client.PMsgAddToPung

_client.PMsgQueryMahJong_swigconstant(_client)
PMsgQueryMahJong = _client.PMsgQueryMahJong

_client.PMsgChow_swigconstant(_client)
PMsgChow = _client.PMsgChow

_client.PMsgFormClosedChow_swigconstant(_client)
PMsgFormClosedChow = _client.PMsgFormClosedChow

_client.PMsgDeclareWashOut_swigconstant(_client)
PMsgDeclareWashOut = _client.PMsgDeclareWashOut

_client.PMsgMahJong_swigconstant(_client)
PMsgMahJong = _client.PMsgMahJong

_client.PMsgPair_swigconstant(_client)
PMsgPair = _client.PMsgPair

_client.PMsgFormClosedPair_swigconstant(_client)
PMsgFormClosedPair = _client.PMsgFormClosedPair

_client.PMsgShowTiles_swigconstant(_client)
PMsgShowTiles = _client.PMsgShowTiles

_client.PMsgSpecialSet_swigconstant(_client)
PMsgSpecialSet = _client.PMsgSpecialSet

_client.PMsgFormClosedSpecialSet_swigconstant(_client)
PMsgFormClosedSpecialSet = _client.PMsgFormClosedSpecialSet

_client.PMsgSetPlayerOption_swigconstant(_client)
PMsgSetPlayerOption = _client.PMsgSetPlayerOption

_client.PMsgSetGameOption_swigconstant(_client)
PMsgSetGameOption = _client.PMsgSetGameOption

_client.PMsgQueryGameOption_swigconstant(_client)
PMsgQueryGameOption = _client.PMsgQueryGameOption

_client.PMsgListGameOptions_swigconstant(_client)
PMsgListGameOptions = _client.PMsgListGameOptions

_client.PMsgChangeManager_swigconstant(_client)
PMsgChangeManager = _client.PMsgChangeManager

_client.PMsgSendMessage_swigconstant(_client)
PMsgSendMessage = _client.PMsgSendMessage

_client.PMsgSwapTile_swigconstant(_client)
PMsgSwapTile = _client.PMsgSwapTile
class CMsgErrorMsg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CMsgErrorMsg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CMsgErrorMsg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _client.CMsgErrorMsg_type_set
    __swig_getmethods__["type"] = _client.CMsgErrorMsg_type_get
    if _newclass:
        type = _swig_property(_client.CMsgErrorMsg_type_get, _client.CMsgErrorMsg_type_set)
    __swig_setmethods__["seqno"] = _client.CMsgErrorMsg_seqno_set
    __swig_getmethods__["seqno"] = _client.CMsgErrorMsg_seqno_get
    if _newclass:
        seqno = _swig_property(_client.CMsgErrorMsg_seqno_get, _client.CMsgErrorMsg_seqno_set)
    __swig_setmethods__["error"] = _client.CMsgErrorMsg_error_set
    __swig_getmethods__["error"] = _client.CMsgErrorMsg_error_get
    if _newclass:
        error = _swig_property(_client.CMsgErrorMsg_error_get, _client.CMsgErrorMsg_error_set)

    def __init__(self):
        this = _client.new_CMsgErrorMsg()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _client.delete_CMsgErrorMsg
    __del__ = lambda self: None
CMsgErrorMsg_swigregister = _client.CMsgErrorMsg_swigregister
CMsgErrorMsg_swigregister(CMsgErrorMsg)

class PMsgListGameOptionsMsg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PMsgListGameOptionsMsg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PMsgListGameOptionsMsg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _client.PMsgListGameOptionsMsg_type_set
    __swig_getmethods__["type"] = _client.PMsgListGameOptionsMsg_type_get
    if _newclass:
        type = _swig_property(_client.PMsgListGameOptionsMsg_type_get, _client.PMsgListGameOptionsMsg_type_set)
    __swig_setmethods__["include_disabled"] = _client.PMsgListGameOptionsMsg_include_disabled_set
    __swig_getmethods__["include_disabled"] = _client.PMsgListGameOptionsMsg_include_disabled_get
    if _newclass:
        include_disabled = _swig_property(_client.PMsgListGameOptionsMsg_include_disabled_get, _client.PMsgListGameOptionsMsg_include_disabled_set)

    def __init__(self):
        this = _client.new_PMsgListGameOptionsMsg()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _client.delete_PMsgListGameOptionsMsg
    __del__ = lambda self: None
PMsgListGameOptionsMsg_swigregister = _client.PMsgListGameOptionsMsg_swigregister
PMsgListGameOptionsMsg_swigregister(PMsgListGameOptionsMsg)

class CMsgMsg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CMsgMsg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CMsgMsg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _client.CMsgMsg_type_set
    __swig_getmethods__["type"] = _client.CMsgMsg_type_get
    if _newclass:
        type = _swig_property(_client.CMsgMsg_type_get, _client.CMsgMsg_type_set)

    def __init__(self):
        this = _client.new_CMsgMsg()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _client.delete_CMsgMsg
    __del__ = lambda self: None
CMsgMsg_swigregister = _client.CMsgMsg_swigregister
CMsgMsg_swigregister(CMsgMsg)

class PMsgMsg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PMsgMsg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PMsgMsg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _client.PMsgMsg_type_set
    __swig_getmethods__["type"] = _client.PMsgMsg_type_get
    if _newclass:
        type = _swig_property(_client.PMsgMsg_type_get, _client.PMsgMsg_type_set)

    def __init__(self):
        this = _client.new_PMsgMsg()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _client.delete_PMsgMsg
    __del__ = lambda self: None
PMsgMsg_swigregister = _client.PMsgMsg_swigregister
PMsgMsg_swigregister(PMsgMsg)

class Game(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Game, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Game, name)
    __repr__ = _swig_repr
    __swig_setmethods__["players"] = _client.Game_players_set
    __swig_getmethods__["players"] = _client.Game_players_get
    if _newclass:
        players = _swig_property(_client.Game_players_get, _client.Game_players_set)
    __swig_setmethods__["round"] = _client.Game_round_set
    __swig_getmethods__["round"] = _client.Game_round_get
    if _newclass:
        round = _swig_property(_client.Game_round_get, _client.Game_round_set)
    __swig_setmethods__["hands_as_east"] = _client.Game_hands_as_east_set
    __swig_getmethods__["hands_as_east"] = _client.Game_hands_as_east_get
    if _newclass:
        hands_as_east = _swig_property(_client.Game_hands_as_east_get, _client.Game_hands_as_east_set)
    __swig_setmethods__["firsteast"] = _client.Game_firsteast_set
    __swig_getmethods__["firsteast"] = _client.Game_firsteast_get
    if _newclass:
        firsteast = _swig_property(_client.Game_firsteast_get, _client.Game_firsteast_set)
    __swig_setmethods__["state"] = _client.Game_state_set
    __swig_getmethods__["state"] = _client.Game_state_get
    if _newclass:
        state = _swig_property(_client.Game_state_get, _client.Game_state_set)
    __swig_setmethods__["active"] = _client.Game_active_set
    __swig_getmethods__["active"] = _client.Game_active_get
    if _newclass:
        active = _swig_property(_client.Game_active_get, _client.Game_active_set)
    __swig_setmethods__["paused"] = _client.Game_paused_set
    __swig_getmethods__["paused"] = _client.Game_paused_get
    if _newclass:
        paused = _swig_property(_client.Game_paused_get, _client.Game_paused_set)
    __swig_setmethods__["player"] = _client.Game_player_set
    __swig_getmethods__["player"] = _client.Game_player_get
    if _newclass:
        player = _swig_property(_client.Game_player_get, _client.Game_player_set)
    __swig_setmethods__["whence"] = _client.Game_whence_set
    __swig_getmethods__["whence"] = _client.Game_whence_get
    if _newclass:
        whence = _swig_property(_client.Game_whence_get, _client.Game_whence_set)
    __swig_setmethods__["supplier"] = _client.Game_supplier_set
    __swig_getmethods__["supplier"] = _client.Game_supplier_get
    if _newclass:
        supplier = _swig_property(_client.Game_supplier_get, _client.Game_supplier_set)
    __swig_setmethods__["tile"] = _client.Game_tile_set
    __swig_getmethods__["tile"] = _client.Game_tile_get
    if _newclass:
        tile = _swig_property(_client.Game_tile_get, _client.Game_tile_set)
    __swig_setmethods__["needs"] = _client.Game_needs_set
    __swig_getmethods__["needs"] = _client.Game_needs_get
    if _newclass:
        needs = _swig_property(_client.Game_needs_get, _client.Game_needs_set)
    __swig_setmethods__["serial"] = _client.Game_serial_set
    __swig_getmethods__["serial"] = _client.Game_serial_get
    if _newclass:
        serial = _swig_property(_client.Game_serial_get, _client.Game_serial_set)
    __swig_setmethods__["claims"] = _client.Game_claims_set
    __swig_getmethods__["claims"] = _client.Game_claims_get
    if _newclass:
        claims = _swig_property(_client.Game_claims_get, _client.Game_claims_set)
    __swig_setmethods__["cpos"] = _client.Game_cpos_set
    __swig_getmethods__["cpos"] = _client.Game_cpos_get
    if _newclass:
        cpos = _swig_property(_client.Game_cpos_get, _client.Game_cpos_set)
    __swig_setmethods__["chowpending"] = _client.Game_chowpending_set
    __swig_getmethods__["chowpending"] = _client.Game_chowpending_get
    if _newclass:
        chowpending = _swig_property(_client.Game_chowpending_get, _client.Game_chowpending_set)
    __swig_setmethods__["mjpending"] = _client.Game_mjpending_set
    __swig_getmethods__["mjpending"] = _client.Game_mjpending_get
    if _newclass:
        mjpending = _swig_property(_client.Game_mjpending_get, _client.Game_mjpending_set)
    __swig_setmethods__["konging"] = _client.Game_konging_set
    __swig_getmethods__["konging"] = _client.Game_konging_get
    if _newclass:
        konging = _swig_property(_client.Game_konging_get, _client.Game_konging_set)
    __swig_setmethods__["ready"] = _client.Game_ready_set
    __swig_getmethods__["ready"] = _client.Game_ready_get
    if _newclass:
        ready = _swig_property(_client.Game_ready_get, _client.Game_ready_set)
    __swig_setmethods__["flags"] = _client.Game_flags_set
    __swig_getmethods__["flags"] = _client.Game_flags_get
    if _newclass:
        flags = _swig_property(_client.Game_flags_get, _client.Game_flags_set)
    __swig_getmethods__["wall"] = _client.Game_wall_get
    if _newclass:
        wall = _swig_property(_client.Game_wall_get)
    __swig_setmethods__["exposed_tile_count"] = _client.Game_exposed_tile_count_set
    __swig_getmethods__["exposed_tile_count"] = _client.Game_exposed_tile_count_get
    if _newclass:
        exposed_tile_count = _swig_property(_client.Game_exposed_tile_count_get, _client.Game_exposed_tile_count_set)
    __swig_setmethods__["discarded_tile_count"] = _client.Game_discarded_tile_count_set
    __swig_getmethods__["discarded_tile_count"] = _client.Game_discarded_tile_count_get
    if _newclass:
        discarded_tile_count = _swig_property(_client.Game_discarded_tile_count_get, _client.Game_discarded_tile_count_set)
    __swig_setmethods__["cmsg_check"] = _client.Game_cmsg_check_set
    __swig_getmethods__["cmsg_check"] = _client.Game_cmsg_check_get
    if _newclass:
        cmsg_check = _swig_property(_client.Game_cmsg_check_get, _client.Game_cmsg_check_set)
    __swig_setmethods__["cmsg_err"] = _client.Game_cmsg_err_set
    __swig_getmethods__["cmsg_err"] = _client.Game_cmsg_err_get
    if _newclass:
        cmsg_err = _swig_property(_client.Game_cmsg_err_get, _client.Game_cmsg_err_set)
    __swig_setmethods__["protversion"] = _client.Game_protversion_set
    __swig_getmethods__["protversion"] = _client.Game_protversion_get
    if _newclass:
        protversion = _swig_property(_client.Game_protversion_get, _client.Game_protversion_set)
    __swig_setmethods__["manager"] = _client.Game_manager_set
    __swig_getmethods__["manager"] = _client.Game_manager_get
    if _newclass:
        manager = _swig_property(_client.Game_manager_get, _client.Game_manager_set)
    __swig_setmethods__["option_table"] = _client.Game_option_table_set
    __swig_getmethods__["option_table"] = _client.Game_option_table_get
    if _newclass:
        option_table = _swig_property(_client.Game_option_table_get, _client.Game_option_table_set)
    __swig_setmethods__["fd"] = _client.Game_fd_set
    __swig_getmethods__["fd"] = _client.Game_fd_get
    if _newclass:
        fd = _swig_property(_client.Game_fd_get, _client.Game_fd_set)
    __swig_setmethods__["cseqno"] = _client.Game_cseqno_set
    __swig_getmethods__["cseqno"] = _client.Game_cseqno_get
    if _newclass:
        cseqno = _swig_property(_client.Game_cseqno_get, _client.Game_cseqno_set)
    __swig_setmethods__["userdata"] = _client.Game_userdata_set
    __swig_getmethods__["userdata"] = _client.Game_userdata_get
    if _newclass:
        userdata = _swig_property(_client.Game_userdata_get, _client.Game_userdata_set)

    def __init__(self):
        this = _client.new_Game()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _client.delete_Game
    __del__ = lambda self: None
Game_swigregister = _client.Game_swigregister
Game_swigregister(Game)

class _Game_wall(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _Game_wall, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _Game_wall, name)
    __repr__ = _swig_repr
    __swig_setmethods__["tiles"] = _client._Game_wall_tiles_set
    __swig_getmethods__["tiles"] = _client._Game_wall_tiles_get
    if _newclass:
        tiles = _swig_property(_client._Game_wall_tiles_get, _client._Game_wall_tiles_set)
    __swig_setmethods__["live_used"] = _client._Game_wall_live_used_set
    __swig_getmethods__["live_used"] = _client._Game_wall_live_used_get
    if _newclass:
        live_used = _swig_property(_client._Game_wall_live_used_get, _client._Game_wall_live_used_set)
    __swig_setmethods__["live_end"] = _client._Game_wall_live_end_set
    __swig_getmethods__["live_end"] = _client._Game_wall_live_end_get
    if _newclass:
        live_end = _swig_property(_client._Game_wall_live_end_get, _client._Game_wall_live_end_set)
    __swig_setmethods__["dead_end"] = _client._Game_wall_dead_end_set
    __swig_getmethods__["dead_end"] = _client._Game_wall_dead_end_get
    if _newclass:
        dead_end = _swig_property(_client._Game_wall_dead_end_get, _client._Game_wall_dead_end_set)
    __swig_setmethods__["size"] = _client._Game_wall_size_set
    __swig_getmethods__["size"] = _client._Game_wall_size_get
    if _newclass:
        size = _swig_property(_client._Game_wall_size_get, _client._Game_wall_size_set)

    def __init__(self):
        this = _client.new__Game_wall()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _client.delete__Game_wall
    __del__ = lambda self: None
_Game_wall_swigregister = _client._Game_wall_swigregister
_Game_wall_swigregister(_Game_wall)

class Player(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Player, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Player, name)
    __repr__ = _swig_repr
    __swig_setmethods__["id"] = _client.Player_id_set
    __swig_getmethods__["id"] = _client.Player_id_get
    if _newclass:
        id = _swig_property(_client.Player_id_get, _client.Player_id_set)
    __swig_setmethods__["name"] = _client.Player_name_set
    __swig_getmethods__["name"] = _client.Player_name_get
    if _newclass:
        name = _swig_property(_client.Player_name_get, _client.Player_name_set)
    __swig_setmethods__["wind"] = _client.Player_wind_set
    __swig_getmethods__["wind"] = _client.Player_wind_get
    if _newclass:
        wind = _swig_property(_client.Player_wind_get, _client.Player_wind_set)
    __swig_setmethods__["num_concealed"] = _client.Player_num_concealed_set
    __swig_getmethods__["num_concealed"] = _client.Player_num_concealed_get
    if _newclass:
        num_concealed = _swig_property(_client.Player_num_concealed_get, _client.Player_num_concealed_set)
    __swig_setmethods__["concealed"] = _client.Player_concealed_set
    __swig_getmethods__["concealed"] = _client.Player_concealed_get
    if _newclass:
        concealed = _swig_property(_client.Player_concealed_get, _client.Player_concealed_set)
    __swig_setmethods__["discard_hint"] = _client.Player_discard_hint_set
    __swig_getmethods__["discard_hint"] = _client.Player_discard_hint_get
    if _newclass:
        discard_hint = _swig_property(_client.Player_discard_hint_get, _client.Player_discard_hint_set)
    __swig_setmethods__["tilesets"] = _client.Player_tilesets_set
    __swig_getmethods__["tilesets"] = _client.Player_tilesets_get
    if _newclass:
        tilesets = _swig_property(_client.Player_tilesets_get, _client.Player_tilesets_set)
    __swig_setmethods__["num_specials"] = _client.Player_num_specials_set
    __swig_getmethods__["num_specials"] = _client.Player_num_specials_get
    if _newclass:
        num_specials = _swig_property(_client.Player_num_specials_get, _client.Player_num_specials_set)
    __swig_setmethods__["specials"] = _client.Player_specials_set
    __swig_getmethods__["specials"] = _client.Player_specials_get
    if _newclass:
        specials = _swig_property(_client.Player_specials_get, _client.Player_specials_set)
    __swig_setmethods__["flags"] = _client.Player_flags_set
    __swig_getmethods__["flags"] = _client.Player_flags_get
    if _newclass:
        flags = _swig_property(_client.Player_flags_get, _client.Player_flags_set)
    __swig_setmethods__["dflags"] = _client.Player_dflags_set
    __swig_getmethods__["dflags"] = _client.Player_dflags_get
    if _newclass:
        dflags = _swig_property(_client.Player_dflags_get, _client.Player_dflags_set)
    __swig_setmethods__["cumulative_score"] = _client.Player_cumulative_score_set
    __swig_getmethods__["cumulative_score"] = _client.Player_cumulative_score_get
    if _newclass:
        cumulative_score = _swig_property(_client.Player_cumulative_score_get, _client.Player_cumulative_score_set)
    __swig_setmethods__["hand_score"] = _client.Player_hand_score_set
    __swig_getmethods__["hand_score"] = _client.Player_hand_score_get
    if _newclass:
        hand_score = _swig_property(_client.Player_hand_score_get, _client.Player_hand_score_set)
    __swig_setmethods__["err"] = _client.Player_err_set
    __swig_getmethods__["err"] = _client.Player_err_get
    if _newclass:
        err = _swig_property(_client.Player_err_get, _client.Player_err_set)
    __swig_setmethods__["userdata"] = _client.Player_userdata_set
    __swig_getmethods__["userdata"] = _client.Player_userdata_get
    if _newclass:
        userdata = _swig_property(_client.Player_userdata_get, _client.Player_userdata_set)

    def __init__(self):
        this = _client.new_Player()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _client.delete_Player
    __del__ = lambda self: None
Player_swigregister = _client.Player_swigregister
Player_swigregister(Player)

_client.MAX_CONCEALED_swigconstant(_client)
MAX_CONCEALED = _client.MAX_CONCEALED

_client.MAX_TILESETS_swigconstant(_client)
MAX_TILESETS = _client.MAX_TILESETS


_client.HandComplete_swigconstant(_client)
HandComplete = _client.HandComplete

_client.Dealing_swigconstant(_client)
Dealing = _client.Dealing

_client.DeclaringSpecials_swigconstant(_client)
DeclaringSpecials = _client.DeclaringSpecials

_client.Discarding_swigconstant(_client)
Discarding = _client.Discarding

_client.Discarded_swigconstant(_client)
Discarded = _client.Discarded

_client.MahJonging_swigconstant(_client)
MahJonging = _client.MahJonging
class PMsgDeclareSpecialMsg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PMsgDeclareSpecialMsg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PMsgDeclareSpecialMsg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _client.PMsgDeclareSpecialMsg_type_set
    __swig_getmethods__["type"] = _client.PMsgDeclareSpecialMsg_type_get
    if _newclass:
        type = _swig_property(_client.PMsgDeclareSpecialMsg_type_get, _client.PMsgDeclareSpecialMsg_type_set)
    __swig_setmethods__["tile"] = _client.PMsgDeclareSpecialMsg_tile_set
    __swig_getmethods__["tile"] = _client.PMsgDeclareSpecialMsg_tile_get
    if _newclass:
        tile = _swig_property(_client.PMsgDeclareSpecialMsg_tile_get, _client.PMsgDeclareSpecialMsg_tile_set)

    def __init__(self):
        this = _client.new_PMsgDeclareSpecialMsg()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _client.delete_PMsgDeclareSpecialMsg
    __del__ = lambda self: None
PMsgDeclareSpecialMsg_swigregister = _client.PMsgDeclareSpecialMsg_swigregister
PMsgDeclareSpecialMsg_swigregister(PMsgDeclareSpecialMsg)

class PMsgDiscardMsg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PMsgDiscardMsg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PMsgDiscardMsg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _client.PMsgDiscardMsg_type_set
    __swig_getmethods__["type"] = _client.PMsgDiscardMsg_type_get
    if _newclass:
        type = _swig_property(_client.PMsgDiscardMsg_type_get, _client.PMsgDiscardMsg_type_set)
    __swig_setmethods__["tile"] = _client.PMsgDiscardMsg_tile_set
    __swig_getmethods__["tile"] = _client.PMsgDiscardMsg_tile_get
    if _newclass:
        tile = _swig_property(_client.PMsgDiscardMsg_tile_get, _client.PMsgDiscardMsg_tile_set)
    __swig_setmethods__["calling"] = _client.PMsgDiscardMsg_calling_set
    __swig_getmethods__["calling"] = _client.PMsgDiscardMsg_calling_get
    if _newclass:
        calling = _swig_property(_client.PMsgDiscardMsg_calling_get, _client.PMsgDiscardMsg_calling_set)

    def __init__(self):
        this = _client.new_PMsgDiscardMsg()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _client.delete_PMsgDiscardMsg
    __del__ = lambda self: None
PMsgDiscardMsg_swigregister = _client.PMsgDiscardMsg_swigregister
PMsgDiscardMsg_swigregister(PMsgDiscardMsg)

class PMsgNoClaimMsg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PMsgNoClaimMsg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PMsgNoClaimMsg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _client.PMsgNoClaimMsg_type_set
    __swig_getmethods__["type"] = _client.PMsgNoClaimMsg_type_get
    if _newclass:
        type = _swig_property(_client.PMsgNoClaimMsg_type_get, _client.PMsgNoClaimMsg_type_set)
    __swig_setmethods__["discard"] = _client.PMsgNoClaimMsg_discard_set
    __swig_getmethods__["discard"] = _client.PMsgNoClaimMsg_discard_get
    if _newclass:
        discard = _swig_property(_client.PMsgNoClaimMsg_discard_get, _client.PMsgNoClaimMsg_discard_set)

    def __init__(self):
        this = _client.new_PMsgNoClaimMsg()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _client.delete_PMsgNoClaimMsg
    __del__ = lambda self: None
PMsgNoClaimMsg_swigregister = _client.PMsgNoClaimMsg_swigregister
PMsgNoClaimMsg_swigregister(PMsgNoClaimMsg)


_client.Hidden_swigconstant(_client)
Hidden = _client.Hidden

_client.MahJongged_swigconstant(_client)
MahJongged = _client.MahJongged

_client.HandDeclared_swigconstant(_client)
HandDeclared = _client.HandDeclared

_client.NoDiscard_swigconstant(_client)
NoDiscard = _client.NoDiscard

_client.OriginalCall_swigconstant(_client)
OriginalCall = _client.OriginalCall

_client.Calling_swigconstant(_client)
Calling = _client.Calling

def test_flag(p, flag):
    return _client.test_flag(p, flag)
test_flag = _client.test_flag

_client.MJSevenPairs_swigconstant(_client)
MJSevenPairs = _client.MJSevenPairs

def player_can_mah_jong(p, d, flags):
    return _client.player_can_mah_jong(p, d, flags)
player_can_mah_jong = _client.player_can_mah_jong
# This file is compatible with both classic and new-style classes.


